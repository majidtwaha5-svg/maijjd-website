{"version":3,"file":"static/js/355.6d8a5f49.chunk.js","mappings":"+MASA,MA6bA,EA7boBA,IAA8C,IAA7C,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,EAAO,SAAEC,GAAUJ,EAC1D,MAAOK,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IACxCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,IACzCS,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAWD,EAAAA,EAAAA,QAAO,OAGxBE,EAAAA,EAAAA,WAAU,KACR,GAAIlB,EAAU,CACZ,MAAMmB,EAAiB,CACrBC,GAAIC,KAAKC,MACTC,KAAM,YACNC,QAAQ,oCAADC,OAAsCzB,EAAS0B,KAAI,kEAAAD,OAEzCzB,EAAS0B,KAAI,qOAQ9BC,WAAW,IAAIN,MAAOO,eAExBvB,EAAY,CAACc,IACbU,EAAoB7B,EACtB,GACC,CAACA,KAGJkB,EAAAA,EAAAA,WAAU,KAAO,IAADY,EACQ,QAAtBA,EAAAf,EAAegB,eAAO,IAAAD,GAAtBA,EAAwBE,eAAe,CAAEC,SAAU,YAClD,CAAC7B,IAGJ,MAAMyB,EAAuB7B,IAC3B,MA2DMkC,EAnD8B,CAClC,mBAAoB,CAClB,4BACA,mCACA,6BACA,oCAEF,qBAAsB,CACpB,8BACA,wBACA,kCACA,2BAEF,sBAAuB,CACrB,qCACA,4BACA,uBACA,uCAEF,gBAAiB,CACf,uBACA,2BACA,wBACA,4BAEF,mBAAoB,CAClB,iCACA,4BACA,wBACA,mCAEF,kBAAmB,CACjB,iCACA,gCACA,6BACA,6BAEF,oBAAqB,CACnB,4BACA,0BACA,2BACA,kCAEF,kBAAmB,CACjB,yBACA,8BACA,+BACA,gCAI4D,OAARlC,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,OAAS,GAC3EZ,EAAe,CA3Db,wBACA,8BACA,+BACA,4BACA,8BAuDqCoB,GAAqBC,MAAM,EAAG,KAIjEC,EAAiBC,UACrB,MAAMC,EAAc,CAClBlB,GAAIC,KAAKC,MACTC,KAAM,OACNC,QAASe,EACTZ,WAAW,IAAIN,MAAOO,eAGxBvB,EAAYmC,GAAQ,IAAIA,EAAMF,IAC9B9B,EAAc,IACdE,GAAY,GAEZ,UAEQ,IAAI+B,QAAQC,GAAWC,WAAWD,EAAS,IAAuB,IAAhBE,KAAKC,WAG7D,MAAMC,EAAaC,EAAmBR,EAASvC,GAEzCgD,EAAmB,CACvB5B,GAAIC,KAAKC,MAAQ,EACjBC,KAAM,YACNC,QAASsB,EACTnB,WAAW,IAAIN,MAAOO,eAGxBvB,EAAYmC,GAAQ,IAAIA,EAAMQ,GAChC,CAAE,MAAOC,GACPC,QAAQD,MAAM,uBAAwBA,GACtC,MAAME,EAAe,CACnB/B,GAAIC,KAAKC,MAAQ,EACjBC,KAAM,YACNC,QAAS,qFACTG,WAAW,IAAIN,MAAOO,eAExBvB,EAAYmC,GAAQ,IAAIA,EAAMW,GAChC,CAAC,QACCzC,GAAY,EACd,GAIIqC,EAAqBA,CAACR,EAASvC,KACnC,MAAMoD,EAAeb,EAAQc,cACvBC,GAAuB,OAARtD,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,OAAQ,gBAGvC,OAAI0B,EAAaG,SAAS,gBAAkBH,EAAaG,SAAS,UAAYH,EAAaG,SAAS,SAC5F,qCAAN9B,OAA4C6B,EAAY,2DAAA7B,OAEvC6B,EAAY,6YAS3BF,EAAaG,SAAS,YAAcH,EAAaG,SAAS,eAAiBH,EAAaG,SAAS,YAC7F,GAAN9B,OAAU6B,EAAY,gDAAA7B,OAET,QAFS+B,EAE1BxD,EAASyD,gBAAQ,IAAAD,OAAA,EAAjBA,EAAmBrB,MAAM,EAAG,GAAGuB,IAAIC,GAAO,UAAAlC,OAASkC,IAAWC,KAAK,MAAK,QAAAnC,QAEvD,QAAjBoC,EAAA7D,EAASyD,gBAAQ,IAAAI,OAAA,EAAjBA,EAAmBC,QAAS,EAAC,YAAArC,OAAezB,EAASyD,SAASK,OAAS,EAAC,mBAAoB,GAAE,sIAKxFV,EAAaG,SAAS,cAAgBH,EAAaG,SAAS,YAAcH,EAAaG,SAAS,SAC5F,eAAN9B,OAAsB6B,EAAY,6gBAiBhCF,EAAaG,SAAS,YAAcH,EAAaG,SAAS,SAAWH,EAAaG,SAAS,WACvF,kDAAN9B,OAAyD6B,EAAY,4gBAkBnEF,EAAaG,SAAS,kBAAoBH,EAAaG,SAAS,aAAeH,EAAaG,SAAS,WACjG,yCAAN9B,OAAgD6B,EAAY,+kBAuB1DF,EAAaG,SAAS,iBAAmBH,EAAaG,SAAS,YAAcH,EAAaG,SAAS,UAAYH,EAAaG,SAAS,SACjI,iDAAN9B,OAAwD6B,EAAY,mnBAiBlEF,EAAaG,SAAS,gBAAkBH,EAAaG,SAAS,YAAcH,EAAaG,SAAS,OAC9F,GAAN9B,OAAU6B,EAAY,mrBAwBlB,sCAAN7B,OAA4Cc,EAAO,qBAAAd,OAAoB6B,EAAY,oFAAA7B,OAKnF6B,EAAY,wkBAvHuG,IAADE,EAAAK,GAgKpH,OAAK5D,GAGH8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uHAAsHC,SAAA,EAEnIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gGAA+FC,SAAA,EAC5GF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACH,UAAU,aACfD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,oBACtCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,UACzB,OAARjE,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,OAAQ,4BAIzBqC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UACEE,QA7BaC,KACrBzD,GAAgBD,IA6BRqD,UAAU,kDACVM,MAAO3D,EAAc,SAAW,WAAWsD,SAE1CtD,GAAcuD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACP,UAAU,aAAeE,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAACR,UAAU,eAE5EE,EAAAA,EAAAA,KAAA,UACEE,QAASlE,EACT8D,UAAU,kDACVM,MAAM,QAAOL,UAEbC,EAAAA,EAAAA,KAACO,EAAAA,EAAC,CAACT,UAAU,qBAKjBrD,IACAoD,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,EAEEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,CAC3D7D,EAASsD,IAAKnB,IACb2B,SAAAA,EAAAA,KAAA,OAEEF,UAAS,QAAAvC,OAA2B,SAAjBc,EAAQhB,KAAkB,cAAgB,iBAAkB0C,UAE/EF,EAAAA,EAAAA,MAAA,OACEC,UAAS,6CAAAvC,OACU,SAAjBc,EAAQhB,KACJ,yBACA,6BACH0C,SAAA,EAEHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,SAAE1B,EAAQf,WACtD0C,EAAAA,EAAAA,KAAA,OAAKF,UAAS,gBAAAvC,OACK,SAAjBc,EAAQhB,KAAkB,gBAAkB,iBAC3C0C,UA3DCtC,EA4DUY,EAAQZ,UA3D7B,IAAIN,KAAKM,GAAWgD,mBAAmB,GAAI,CAChDC,KAAM,UACNC,OAAQ,mBA2COtC,EAAQnB,IA9CPO,QAmETlB,IACCyD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iDAAgDC,UAC7DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kDAAkDc,MAAO,CAAEC,eAAgB,WAC1Fb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kDAAkDc,MAAO,CAAEC,eAAgB,cAE5Fb,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,8BAMhDC,EAAAA,EAAAA,KAAA,OAAKc,IAAKjE,OAIXF,EAAYiD,OAAS,IACpBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,wBAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClCpD,EAAY6C,IAAI,CAACuB,EAAYC,KAC5BhB,EAAAA,EAAAA,KAAA,UAEEE,QAASA,IAvGIa,KAC7B7C,EAAe6C,IAsGgBE,CAAsBF,GACrCjB,UAAU,qHAAoHC,SAE7HgB,GAJIC,UAYfhB,EAAAA,EAAAA,KAAA,QAAMkB,SA1HQC,IACpBA,EAAEC,iBACE/E,EAAWgF,SAAW9E,GACxB2B,EAAe7B,EAAWgF,SAuHQvB,UAAU,+BAA8BC,UACpEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACEc,IAAK/D,EACLM,KAAK,OACLiE,MAAOjF,EACPkF,SAAWJ,GAAM7E,EAAc6E,EAAEK,OAAOF,OACxCG,YAAY,yCACZ3B,UAAU,0IACV4B,SAAUnF,KAEZyD,EAAAA,EAAAA,KAAA,UACE3C,KAAK,SACLqE,UAAWrF,EAAWgF,QAAU9E,EAChCuD,UAAU,8JAA6JC,UAEvKC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAAC7B,UAAU,yBAjHV,K","sources":["components/AIAssistant.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Bot, \n  X, \n  Send, \n  ChevronUp,\n  ChevronDown\n} from 'lucide-react';\n\nconst AIAssistant = ({ software, isOpen, onClose, onToggle }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (software) {\n      const welcomeMessage = {\n        id: Date.now(),\n        type: 'assistant',\n        content: `Hello! I'm your AI assistant for ${software.name}. I can help you with:\n        \n• Getting started with ${software.name}\n• Understanding features and capabilities\n• Troubleshooting common issues\n• Best practices and optimization\n• Integration with other tools\n• Custom development needs\n\nHow can I help you today?`,\n        timestamp: new Date().toISOString()\n      };\n      setMessages([welcomeMessage]);\n      generateSuggestions(software);\n    }\n  }, [software]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Generate contextual suggestions based on software\n  const generateSuggestions = (software) => {\n    const baseSuggestions = [\n      'How do I get started?',\n      'What are the main features?',\n      'How do I configure settings?',\n      'Can you show me examples?',\n      'What are best practices?'\n    ];\n\n    const softwareSpecificSuggestions = {\n      'Maijjd CRM Suite': [\n        'How do I manage contacts?',\n        'How do I create sales pipelines?',\n        'How do I generate reports?',\n        'How do I set up email marketing?'\n      ],\n      'DataFlow Analytics': [\n        'How do I create dashboards?',\n        'How do I import data?',\n        'How do I create custom reports?',\n        'How do I set up alerts?'\n      ],\n      'SecureGate Firewall': [\n        'How do I configure security rules?',\n        'How do I monitor threats?',\n        'How do I set up VPN?',\n        'How do I generate security reports?'\n      ],\n      'CloudSync Pro': [\n        'How do I sync files?',\n        'How do I manage storage?',\n        'How do I share files?',\n        'How do I set up backups?'\n      ],\n      'MobileDev Studio': [\n        'How do I create a new project?',\n        'How do I test on devices?',\n        'How do I deploy apps?',\n        'How do I use the visual editor?'\n      ],\n      'WebFlow Builder': [\n        'How do I create a new website?',\n        'How do I customize templates?',\n        'How do I optimize for SEO?',\n        'How do I publish my site?'\n      ],\n      'ServerManager Pro': [\n        'How do I monitor servers?',\n        'How do I set up alerts?',\n        'How do I manage backups?',\n        'How do I configure monitoring?'\n      ],\n      'DevOps Pipeline': [\n        'How do I set up CI/CD?',\n        'How do I configure testing?',\n        'How do I manage deployments?',\n        'How do I monitor pipelines?'\n      ]\n    };\n\n    const specificSuggestions = softwareSpecificSuggestions[software?.name] || [];\n    setSuggestions([...baseSuggestions, ...specificSuggestions].slice(0, 8));\n  };\n\n  // Process user message and generate AI response\n  const processMessage = async (message) => {\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsTyping(true);\n\n    try {\n      // Simulate AI processing delay\n      await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n      // Generate intelligent response based on message content and software context\n      const aiResponse = generateAIResponse(message, software);\n      \n      const assistantMessage = {\n        id: Date.now() + 1,\n        type: 'assistant',\n        content: aiResponse,\n        timestamp: new Date().toISOString()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('AI processing error:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'assistant',\n        content: 'I apologize, but I encountered an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  // Generate intelligent AI responses\n  const generateAIResponse = (message, software) => {\n    const lowerMessage = message.toLowerCase();\n    const softwareName = software?.name || 'this software';\n\n    // Software-specific responses\n    if (lowerMessage.includes('get started') || lowerMessage.includes('start') || lowerMessage.includes('begin')) {\n      return `Great! Let's get you started with ${softwareName}. Here's a step-by-step guide:\n\n1. **Installation**: ${softwareName} is ready to use - no installation required!\n2. **First Steps**: Navigate to the main dashboard and explore the interface\n3. **Quick Setup**: Configure your preferences in the settings panel\n4. **Tutorial**: Use the built-in tutorial mode for guided learning\n5. **Support**: I'm here 24/7 to help with any questions\n\nWould you like me to walk you through any specific feature or setting?`;\n    }\n\n    if (lowerMessage.includes('feature') || lowerMessage.includes('capability') || lowerMessage.includes('what can')) {\n      return `${softwareName} offers powerful capabilities including:\n\n${software.features?.slice(0, 6).map(feature => `• ${feature}`).join('\\n')}\n\n${software.features?.length > 6 ? `\\n...and ${software.features.length - 6} more features!` : ''}\n\nEach feature is designed to enhance your productivity and workflow. Which specific feature would you like to learn more about?`;\n    }\n\n    if (lowerMessage.includes('configure') || lowerMessage.includes('setting') || lowerMessage.includes('setup')) {\n      return `Configuring ${softwareName} is straightforward:\n\n**Basic Configuration:**\n• Access settings via the gear icon (⚙️) in the top right\n• Customize your dashboard layout and preferences\n• Set up user roles and permissions\n• Configure integrations with other tools\n\n**Advanced Settings:**\n• API configuration for developers\n• Custom workflows and automation\n• Performance tuning options\n• Security and compliance settings\n\nWould you like me to guide you through any specific configuration?`;\n    }\n\n    if (lowerMessage.includes('example') || lowerMessage.includes('demo') || lowerMessage.includes('show me')) {\n      return `Here are some practical examples of how to use ${softwareName}:\n\n**Common Use Cases:**\n• Creating your first project or workspace\n• Setting up user management and collaboration\n• Configuring automated workflows\n• Generating reports and analytics\n• Integrating with external services\n\n**Real-world Scenarios:**\n• Team collaboration on complex projects\n• Data analysis and visualization\n• Security monitoring and threat response\n• Performance optimization and scaling\n\nWould you like me to demonstrate any specific scenario?`;\n    }\n\n    if (lowerMessage.includes('best practice') || lowerMessage.includes('optimize') || lowerMessage.includes('improve')) {\n      return `Here are the best practices for using ${softwareName} effectively:\n\n**Performance Optimization:**\n• Regular data cleanup and maintenance\n• Efficient workflow design\n• Proper resource allocation\n• Regular backups and updates\n\n**Security Best Practices:**\n• Use strong authentication methods\n• Regular security audits\n• Keep software updated\n• Monitor access logs\n\n**Collaboration Best Practices:**\n• Clear role definitions\n• Consistent naming conventions\n• Regular team training\n• Documentation maintenance\n\nWould you like me to elaborate on any of these areas?`;\n    }\n\n    if (lowerMessage.includes('troubleshoot') || lowerMessage.includes('problem') || lowerMessage.includes('error') || lowerMessage.includes('issue')) {\n      return `I'm here to help troubleshoot any issues with ${softwareName}. Let me guide you:\n\n**Common Issues & Solutions:**\n• **Performance Issues**: Check system resources and clear cache\n• **Connection Problems**: Verify network settings and firewall rules\n• **Data Sync Issues**: Check integration settings and permissions\n• **User Access Problems**: Verify role assignments and permissions\n\n**Troubleshooting Steps:**\n1. Check the status dashboard for system alerts\n2. Review recent activity logs\n3. Verify your configuration settings\n4. Test with a simple operation\n\nCan you describe the specific issue you're experiencing? I'll provide targeted solutions.`;\n    }\n\n    if (lowerMessage.includes('integration') || lowerMessage.includes('connect') || lowerMessage.includes('api')) {\n      return `${softwareName} offers powerful integration capabilities:\n\n**Built-in Integrations:**\n• Popular development tools and platforms\n• Cloud services (AWS, Azure, Google Cloud)\n• Communication tools (Slack, Teams, Discord)\n• Project management platforms\n\n**API Access:**\n• RESTful API for custom integrations\n• Webhook support for real-time updates\n• SDKs for popular programming languages\n• Comprehensive API documentation\n\n**Custom Integrations:**\n• Custom connector development\n• Third-party service integration\n• Data import/export tools\n• Workflow automation\n\nWould you like me to help you set up any specific integration?`;\n    }\n\n    // Default response for unrecognized queries\n    return `I understand you're asking about \"${message}\" in relation to ${softwareName}. \n\nLet me provide some helpful information:\n\n**General Guidance:**\n• ${softwareName} is designed to be intuitive and user-friendly\n• Most features can be accessed through the main navigation\n• Context-sensitive help is available throughout the interface\n• I'm here to provide personalized assistance\n\n**What I Can Help With:**\n• Feature explanations and tutorials\n• Configuration and setup guidance\n• Troubleshooting and problem resolution\n• Best practices and optimization tips\n• Integration and customization help\n\nCould you rephrase your question or let me know what specific aspect you'd like to learn about?`;\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() && !isTyping) {\n      processMessage(inputValue.trim());\n    }\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = (suggestion) => {\n    processMessage(suggestion);\n  };\n\n  // Toggle minimize state\n  const toggleMinimize = () => {\n    setIsMinimized(!isMinimized);\n  };\n\n  // Format timestamp\n  const formatTime = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 w-96 max-h-[600px] bg-white rounded-lg shadow-2xl border border-gray-200 overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Bot className=\"h-6 w-6\" />\n          <div>\n            <h3 className=\"font-semibold text-lg\">MJND Assistant</h3>\n            <p className=\"text-sm text-blue-100\">\n              {software?.name || 'Software Support'}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={toggleMinimize}\n            className=\"p-1 hover:bg-white/20 rounded transition-colors\"\n            title={isMinimized ? 'Expand' : 'Minimize'}\n          >\n            {isMinimized ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\n          </button>\n          <button\n            onClick={onClose}\n            className=\"p-1 hover:bg-white/20 rounded transition-colors\"\n            title=\"Close\"\n          >\n            <X className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      {!isMinimized && (\n        <>\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4 max-h-80\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                    message.type === 'user'\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-100 text-gray-800'\n                  }`}\n                >\n                  <div className=\"whitespace-pre-wrap text-sm\">{message.content}</div>\n                  <div className={`text-xs mt-1 ${\n                    message.type === 'user' ? 'text-blue-100' : 'text-gray-500'\n                  }`}>\n                    {formatTime(message.timestamp)}\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {/* Typing indicator */}\n            {isTyping && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"flex space-x-1\">\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                    </div>\n                    <span className=\"text-sm text-gray-600\">AI is thinking...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Suggestions */}\n          {suggestions.length > 0 && (\n            <div className=\"px-4 pb-3\">\n              <p className=\"text-xs text-gray-500 mb-2\">Quick suggestions:</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {suggestions.map((suggestion, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleSuggestionClick(suggestion)}\n                    className=\"px-3 py-1 bg-blue-50 text-blue-700 text-xs rounded-full hover:bg-blue-100 transition-colors border border-blue-200\"\n                  >\n                    {suggestion}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Input */}\n          <form onSubmit={handleSubmit} className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex space-x-2\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                placeholder=\"Ask me anything about this software...\"\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                disabled={isTyping}\n              />\n              <button\n                type=\"submit\"\n                disabled={!inputValue.trim() || isTyping}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n              >\n                <Send className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AIAssistant;\n"],"names":["_ref","software","isOpen","onClose","onToggle","messages","setMessages","useState","inputValue","setInputValue","isTyping","setIsTyping","isMinimized","setIsMinimized","suggestions","setSuggestions","messagesEndRef","useRef","inputRef","useEffect","welcomeMessage","id","Date","now","type","content","concat","name","timestamp","toISOString","generateSuggestions","_messagesEndRef$curre","current","scrollIntoView","behavior","specificSuggestions","slice","processMessage","async","userMessage","message","prev","Promise","resolve","setTimeout","Math","random","aiResponse","generateAIResponse","assistantMessage","error","console","errorMessage","lowerMessage","toLowerCase","softwareName","includes","_software$features","features","map","feature","join","_software$features2","length","_jsxs","className","children","_jsx","Bot","onClick","toggleMinimize","title","ChevronUp","ChevronDown","X","_Fragment","toLocaleTimeString","hour","minute","style","animationDelay","ref","suggestion","index","handleSuggestionClick","onSubmit","e","preventDefault","trim","value","onChange","target","placeholder","disabled","Send"],"sourceRoot":""}